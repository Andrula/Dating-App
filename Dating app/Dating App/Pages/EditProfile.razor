@page "/EditProfile"
@using System.Data.SqlClient
@using System.Data
@using System.Data.Sql
@using System.Text.RegularExpressions;
@using System.Linq;
@using Dating_App.Data;
@using Dating_App.Services;
@inject NavigationManager navigateManager
@inject SessionState State
@inject HttpClient Http
@inject IFileUpload fileUpload



<div class="card">
    <img class="imageCard" src='http:\\127.0.0.1:8887\userImages\@(State.Username)\@(State.Username).jpg' onerror="http:\\127.0.0.1:8887\userImages\Default.png">
    <div style="display: inline-flex">
        <BlazorInputFile.InputFile OnChange="HandleFileSelected" accept="image/png, image/jpeg, image/gif" />
        <button style="padding: 5px; width: 50%; height: 35px; font-size: 14px; margin-right: 5px; margin-top: 7px;" @onclick=updatePage>Upload</button>
    </div>
    @* <button @onclick=uploadMethod>Upload</button>*@
    <input @bind-value="inputFirstname" placeholder="Edit your first name..." />
    <input @bind-value="inputDescription" placeholder="Edit your description..." />
    <input @bind-value="inputCity" placeholder="Edit your city..." />
    <input @bind-value="inputWeight" type="number" placeholder="Edit your weight in kg..." />
    <input @bind-value="inputHeight" type="number" placeholder="Edit your height in cm..." />
    <button class="buttonpage" type="submit" @onclick=alterTable style="margin-top: 5px;">Confirm changes</button>
</div>

@if (file != null)
{

    <span>File Name: @file.Name</span>
    <br />
    <span>File Name: @file.Size</span>
    <br />
    <span>File Name: @file.Type</span>
    <br />
}


@code {

    private string inputFirstname;
    private string inputDescription;
    private string inputCity;
    private string inputWeight;
    private string inputHeight;



    IFileListEntry file;
    async Task HandleFileSelected(IFileListEntry[] files)
    {
        file = files.FirstOrDefault();
        if (File.Exists(@"C:\Users\xAndr\Source\Repos\Dating-App\Dating app\Dating App\userImages\" + State.Username + @"\" + State.Username + ".jpg"))
        {
            File.Delete(@"C:\Users\xAndr\Source\Repos\Dating-App\Dating app\Dating App\userImages\" + State.Username + @"\" + State.Username + ".jpg");
        }
        if (file != null)
        {
            await fileUpload.Upload(file, State);
            File.Move(@"C:\Users\xAndr\Source\Repos\Dating-App\Dating app\Dating App\userImages\" + State.Username + @"\" + file.Name,
            @"C:\Users\xAndr\Source\Repos\Dating-App\Dating app\Dating App\userImages\" + State.Username + @"\" + State.Username + ".jpg");

        }
    }




    public void updatePage()
    {
        navigateManager.NavigateTo(navigateManager.Uri, forceLoad: true);
    }

    public void alterTable()
    {
        Error error = new Error();

        SqlConnection con = new SqlConnection(@"Data Source=DESKTOP-2B7RBNS\SQLEXPRESS;Initial Catalog=DatingDB;Integrated Security=True");
        if (con.State == ConnectionState.Closed)
        {

            // Opens the SQL connection
            con.Open();

            if (inputFirstname != null)
            {
                string query = "UPDATE Profile SET Firstname = @Firstname WHERE AccountID = @AccountID;";
                SqlCommand sqlCmd = new SqlCommand(query, con);
                sqlCmd.CommandType = System.Data.CommandType.Text;
                sqlCmd.Parameters.AddWithValue("@Firstname", inputFirstname);
                sqlCmd.Parameters.AddWithValue("@AccountID", State.Id);

                try
                {
                    sqlCmd.ExecuteScalar();
                    State.Firstname = inputFirstname;
                    navigateManager.NavigateTo("MyProfile");
                }
                catch
                {
                    error.errorMessage = "Email and/or username already exists!";
                }
            }

            if (inputDescription != null)
            {
                string query = "UPDATE Profile SET Description = @Description WHERE AccountID = @AccountID;";
                SqlCommand sqlCmd = new SqlCommand(query, con);
                sqlCmd.CommandType = System.Data.CommandType.Text;
                sqlCmd.Parameters.AddWithValue("@Description", inputDescription);
                sqlCmd.Parameters.AddWithValue("@AccountID", State.Id);

                try
                {
                    State.Description = inputDescription;
                    sqlCmd.ExecuteScalar();
                    navigateManager.NavigateTo("MyProfile");
                }
                catch
                {
                    error.errorMessage = "Email and/or username already exists!";
                }
            }

            if (inputCity != null)
            {
                string query = "UPDATE Profile SET Area = @City WHERE AccountID = @AccountID;";
                SqlCommand sqlCmd = new SqlCommand(query, con);
                sqlCmd.CommandType = System.Data.CommandType.Text;
                sqlCmd.Parameters.AddWithValue("@City", inputCity);
                sqlCmd.Parameters.AddWithValue("@AccountID", State.Id);

                try
                {
                    sqlCmd.ExecuteScalar();
                    State.City = inputCity;
                    navigateManager.NavigateTo("MyProfile");
                }
                catch
                {
                    error.errorMessage = "Email and/or username already exists!";
                }
            }


            if (inputHeight != null)
            {
                string query = "UPDATE Profile SET Height = @Height WHERE AccountID = @AccountID;";
                SqlCommand sqlCmd = new SqlCommand(query, con);
                sqlCmd.CommandType = System.Data.CommandType.Text;
                sqlCmd.Parameters.AddWithValue("@Height", inputHeight);
                sqlCmd.Parameters.AddWithValue("@AccountID", State.Id);

                try
                {
                    State.Height = Convert.ToInt32(inputHeight);
                    sqlCmd.ExecuteScalar();
                    navigateManager.NavigateTo("MyProfile");
                }
                catch
                {
                    error.errorMessage = "Email and/or username already exists!";
                }
            }

            if (inputWeight != null)
            {
                string query = "UPDATE Profile SET Weight = @Weight WHERE AccountID = @AccountID;";
                SqlCommand sqlCmd = new SqlCommand(query, con);
                sqlCmd.CommandType = System.Data.CommandType.Text;
                sqlCmd.Parameters.AddWithValue("@Weight", inputWeight);
                sqlCmd.Parameters.AddWithValue("@AccountID", State.Id);

                try
                {
                    State.Weight = Convert.ToInt32(inputWeight);
                    sqlCmd.ExecuteScalar();
                    navigateManager.NavigateTo("MyProfile");
                }
                catch
                {
                    error.errorMessage = "Email and/or username already exists!";
                }

            }
            navigateManager.NavigateTo("MyProfile");
        }
    }
}


@*Styling for the page*@
<style>
    .gradient-custom-2 {
        /* fallback for old browsers */
        background: #fccb90;
        /* Chrome 10-25, Safari 5.1-6 */
        background: -webkit-linear-gradient(to right, #ee7724, #d8363a, #dd3675, #b44593);
        /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */
        background: linear-gradient(to right, #ee7724, #d8363a, #dd3675, #b44593);
    }

    .card {
        box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);
        max-width: 300px;
        margin: auto;
        text-align: center;
        margin-bottom: 20px;
    }


    .description {
        color: grey;
        font-size: 18px;
    }

    input {
        padding-top: 5px;
        margin-top: 5px;
        margin-left: 10px;
        margin-right: 10px;
        border: none;
        border-bottom: 1px solid #D3D3D3;
    }

    .input .item:hover {
        background: #e1e1e1;
        border: 1px solid #D3D3D3;
    }

    .buttonpage {
        border: none;
        outline: 0;
        display: inline-block;
        padding: 8px;
        text-align: center;
        cursor: pointer;
        width: 100%;
        font-size: 18px;
        /* fallback for old browsers */
        background: #fccb90;
        /* Chrome 10-25, Safari 5.1-6 */
        background: -webkit-linear-gradient(to right, #ee7724, #d8363a, #dd3675, #b44593);
        /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */
        background: linear-gradient(to right, #ee7724, #d8363a, #dd3675, #b44593);
    }

        button:hover, a:hover {
            opacity: 0.7;
        }
</style>