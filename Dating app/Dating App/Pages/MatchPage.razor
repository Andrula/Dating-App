@page "/MatchPage"
@using System.Data.SqlClient
@using System.Data
@using System.Data.Sql
@using System.Text.RegularExpressions;
@using System.Linq;
@using Dating_App.Data;
@inject NavigationManager navigateManager
@inject SessionState State
@inherits ProfileListBase

<body>
    <div class="container">
        <div>
            <label>
                <input type="radio"
                       value="M"
                       name="genderMale"
                       checked="@(searchGender == "M")"
                       @onclick="@(()=>searchGender = "M")" />Male
            </label>
            <label>
                <input type="radio"
                       value="F"
                       name="genderFemale"
                       checked="@(searchGender == "F")"
                       @onclick="@(()=>searchGender = "F")" />Female
            </label>
        </div>
    </div>
</body>


<button @onclick=klikmig></button>

@code {
    public string searchGender;


    public void klikmig()
    {
        loadedProfiles();
    }

    public IEnumerable<ProfileInfo> loadedProfiles
        {
            get
                {
                SqlConnection con = new SqlConnection(@"Data Source=DESKTOP-2B7RBNS\SQLEXPRESS;Initial Catalog=DatingDB;Integrated Security=True");
                if (con.State == ConnectionState.Closed)
                {
                    // Opens the SQL connection
                    con.Open();
                }
                string query = $"SELECT Account.AccountID, Account.Email, Account.Username, Profile.AccountID, Profile.Firstname, Profile.Description, Profile.Area, Profile.Age, Profile.Gender, Profile.Height, Profile.Weight, Profile.DELETED FROM Account INNER JOIN Profile ON Profile.AccountID=Account.AccountID where Gender = @Gender;";

                List<ProfileInfo> profiles = new List<ProfileInfo>();
                using (SqlCommand sqlCmd = new SqlCommand(query, con))
                {
                    sqlCmd.CommandType = System.Data.CommandType.Text;

                    sqlCmd.Parameters.AddWithValue("@Gender", sGender);
                    SqlDataReader reader = sqlCmd.ExecuteReader();

                    while (reader.Read())
                    {
                        for (int i = 0; i <= reader.FieldCount - 12; i++)
                        {
                            ProfileInfo profileName = new ProfileInfo();

                            profileName.Firstname = reader.GetString(reader.GetOrdinal("Firstname"));
                            profileName.Description = reader.GetString(reader.GetOrdinal("Description"));
                            profileName.Age = reader.GetDateTime(reader.GetOrdinal("Age"));
                            profileName.City = reader.GetString(reader.GetOrdinal("Area"));
                            profileName.Weight = reader.GetInt32(reader.GetOrdinal("Weight"));
                            profileName.Height = reader.GetInt32(reader.GetOrdinal("Height"));
                            profileName.Gender = reader.GetString(reader.GetOrdinal("Gender"));
                            profileName.isDeleted = reader.GetByte(reader.GetOrdinal("DELETED"));

                            profiles.Add(profileName);
                        }

                    }
                }
                return profiles;
            }
        }
    }
 
 }
